name: "DevSecOpsBot Image Scanner"
description: "Scan container images"
author: "Sttor Security"

inputs:
  image:
    description: "Container image to scan"
    required: true
  post-url:
    description: "Backend URL to post results"
    required: false
    default: ""
  auth-token:
    description: "Auth token for backend"
    required: false
    default: ""
  block-on-critical:
    description: "Block if critical vulnerabilities exceed threshold"
    required: false
    default: ""
  block-on-high:
    description: "Block if high+critical vulnerabilities exceed threshold"
    required: false
    default: ""
  block-on-any:
    description: "Block if any vulnerability exists"
    required: false
    default: ""
  block-on-secrets:
    description: "Block if secrets are found"
    required: false
    default: ""

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Setup Trivy
      uses: aquasecurity/setup-trivy@v0.2.4
      with:
        version: v0.65.0
        cache: true

    - name: Restore Trivy DB cache
      uses: actions/cache@v4
      with:
        path: .cache/trivy
        key: cache-trivy-${{ github.run_id }}
        restore-keys: cache-trivy-

    - name: Install dependencies
      run: pip install -r $GITHUB_ACTION_PATH/requirements.txt
      shell: bash

    - name: Run scanner
      run: python $GITHUB_ACTION_PATH/scanner.py "${{ inputs.image }}"
      shell: bash
      env:
        TRIVY_CACHE_DIR: ${{ github.workspace }}/.cache/trivy
        POST_URL: ${{ inputs.post-url }}
        AUTH_TOKEN: ${{ inputs.auth-token }}
        BLOCK_ON_CRITICAL: ${{ inputs.block-on-critical }}
        BLOCK_ON_HIGH: ${{ inputs.block-on-high }}
        BLOCK_ON_ANY: ${{ inputs.block-on-any }}
        BLOCK_ON_SECRETS: ${{ inputs.block-on-secrets }}
